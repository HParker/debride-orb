# This code is licensed from CircleCI to the user under the MIT license. See
# https://circleci.com/orbs/registry/licensing for details.
version: 2.1
description: |
  Run Debride on your ruby code in an orb ðŸ”®
  Contribute at: https://github.com/HParker/debride-orb

commands:
  install-debride:
    description: Install Debride
    parameters:
      version:
        default: ""
        description: Debride gem version
        type: string
    steps:
    - run:
        command: |
          if [ -z "<< parameters.version >>" ]; then
            gem install debride
          else
            gem install debride --version "<< parameters.version >>"
          fi
        name: Install Debride << parameters.version >>
  run-debride:
    description: Run Debride
    parameters:
      options:
        default: ""
        description: CLI options
        type: string
    steps:
    - run: debride << parameters.options >> .

examples:
  debride:
    description: |
      Run Debride
    usage:
      orbs:
        debride: hparker/debride@x.y.z
      version: 2.1
      workflows:
        test:
          jobs:
          - debride/debride
        version: 2
  debride-version:
    description: |
      Run specific version of Debride
    usage:
      orbs:
        debride: hparker/debride@x.y.z
      version: 2.1
      workflows:
        test:
          jobs:
          - debride/debride:
              version: 2.12.1
        version: 2

executors:
  ruby:
    docker:
    - image: rubylang/ruby:latest
jobs:
  debride:
    description: Checkout code and run Debride
    executor: << parameters.executor >>
    parameters:
      executor:
        default: ruby
        description: executor for debride
        type: executor
      options:
        default: ""
        description: CLI options
        type: string
      version:
        default: ""
        description: Debride version
        type: string
    steps:
    - checkout
    - install-debride:
        version: << parameters.version >>
    - run-debride:
        options: << parameters.options >>
